name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - '*'

permissions:
  contents: write

env:
  GO_VERSION: '1.24.1'
  APP_NAME: 'sb'
  GITHUB_REPO: 'github.com/saltyorg/sb-go'

jobs:
  build_and_release:
    name: Build and Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.determine_version.outputs.version }}
      git_commit: ${{ steps.get_git_commit.outputs.short_sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get Git Commit SHA
        id: get_git_commit
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Determine Version
        id: determine_version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "version=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
          else
            echo "version=0.0.0-dev" >> "$GITHUB_OUTPUT"
          fi

      - name: Build
        env:
          VERSION: ${{ steps.determine_version.outputs.version }}
          GIT_COMMIT: ${{ steps.get_git_commit.outputs.short_sha }}
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
        run: |
          ldflags="-w -s -X '${GITHUB_REPO}/runtime.Version=${VERSION}' -X '${GITHUB_REPO}/runtime.GitCommit=${GIT_COMMIT}'"
          go build -trimpath -ldflags="${ldflags}" -o ${APP_NAME} .

      - name: Upload Artifact
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}
          path: ${{ env.APP_NAME }}

      - name: Create GitHub Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.determine_version.outputs.version }}
          name: Release ${{ steps.determine_version.outputs.version }}
          draft: false
          prerelease: false
          files: ${{ env.APP_NAME }}
